name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: ProjectList.sln
      Project_Path: ProjectList/ProjectList.csproj
      Output_Dir: ProjectList/bin/${{ matrix.configuration }}/net8.0-windows

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test

    - name: Restore solution
      run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

    - name: Decode PFX certificate (if available)
      shell: pwsh
      run: |
        $certBytes = [System.Convert]::FromBase64String("${{ secrets.PFX_CERTIFICATE }}")
        [System.IO.File]::WriteAllBytes("signing.pfx", $certBytes)

    - name: Build and sign project
      shell: pwsh
      run: |
        msbuild "${{ env.Project_Path }}" `
          /p:Configuration=${{ matrix.configuration }} `
          /p:SignAssembly=true `
          /p:AssemblyOriginatorKeyFile="signing.pfx" `
          /p:PackageCertificatePassword="${{ secrets.Pfx_Key }}"

    - name: Upload built executable
      uses: actions/upload-artifact@v4
      with:
        name: ProjectList-${{ matrix.configuration }}-exe
        path: ${{ env.Output_Dir }}/ProjectList.exe
